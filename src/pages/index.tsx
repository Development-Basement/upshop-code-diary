import { type GetServerSidePropsContext, type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import DiaryRecord, { type DiaryRecordProps } from "../components/diaryRecord";
import Header from "../components/header";
import PageWrapper from "../components/pageWrapper";
import { getServerAuthSession } from "../server/auth";

const Home: NextPage = ({}) => {
  const [recordProps, _setRecordProps] = useState<Array<DiaryRecordProps>>([
    {
      name: "Albert Pátík",
      language: "C#",
      duration: 25,
      date: new Date(2022, 3, 22),
      description:
        "Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet",
      rating: 3,
    },
    {
      name: "Adam Hrnčárek",
      language: "Typescript",
      duration: 60,
      date: new Date(2022, 3, 22),
      description:
        "Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet",
      rating: 4,
    },
    {
      name: "Richard Materna",
      language: "tRPC",
      duration: 40,
      date: new Date(2022, 3, 22),
      description:
        "Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet",
      rating: 0,
    },
  ]);

  return (
    <>
      <Head>
        <title>UpShop - Dashboard</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="h-full min-h-screen bg-gradient-to-b from-bgdark1 to-bgdark3">
        <Header />
        <PageWrapper>
          {recordProps.map((record, i) => {
            return (
              <DiaryRecord
                key={i}
                name={record.name}
                language={record.language}
                duration={record.duration}
                date={record.date}
                description={record.description}
                rating={record.rating}
              />
            );
          })}
        </PageWrapper>
      </div>
    </>
  );
};

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const session = await getServerAuthSession(context);

  if (!session) {
    return {
      redirect: {
        destination: "/signin",
        permanent: false,
      },
    };
  }

  return {
    props: {},
  };
}

export default Home;
